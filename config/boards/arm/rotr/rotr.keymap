#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

&inc_dec_kp {
	triggers-per-rotation = <4>;
};
&def_lshft {
	triggers-per-rotation = <4>;
};
/ {
    macros {
		copy_macro: copy_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_copy_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_press &kp LCTRL>
			, <&macro_tap &kp C>
			, <&macro_release &kp LCTRL>
			;
		};
		paste_macro: paste_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_paste_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_press &kp LCTRL>
			, <&macro_tap &kp P>
			, <&macro_release &kp LCTRL>
			;
		};
		cut_macro: cut_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_cut_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_press &kp LCTRL>
			, <&macro_tap &kp X>
			, <&macro_release &kp LCTRL>
			;
		};
		undo_macro: undo_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_undo_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_press &kp LCTRL>
			, <&macro_tap &kp Z>
			, <&macro_release &kp LCTRL>
			;
		};
		settings_macro: settings_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_settings_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_press LEFT_GUI>
			, <&macro_tap &kp I>
			, <&macro_release LEFT_GUI>
			;
		};
		closetab_macro: closetab_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_closetab_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_press LALT>
			, <&macro_tap F4>
			, <&macro_release LALT>
			;
		};
		email_macro: email_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_email_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_tap &kp Z &kp S &kp H &kp A &kp F AT_SIGN &kp L &kp I &kp V &kp E PERIOD &kp C &kp O &kp M>
			;
		};
		firstname_macro: firstname_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_firstname_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_tap &kp Z &kp A &kp C &kp H &kp A &kp R &kp Y>
			;
		};
		lastname_macro: lastname_macro {
		compatible = "zmk,behavior-macro";
		label = "ZM_lastname_macro";
		#binding-cells = <0>;
		wait-ms = <0>;
		tap-ms = <0>;
		bindings
			= <&macro_tap &kp S &kp H &kp A &kp F &kp F &kp E &kp R>
			;
		};
    }; 
};
/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			//PREV | PLAY/PAUSE | NEXT
			bindings = <&copy_macro &lt 4 F13 &kp C_PP>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		one {
			//PREV | PLAY/PAUSE | NEXT
			bindings = <&kp C_PREV &lt 4 C_PP &kp C_NEXT>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		two {
			//PREV | PLAY/PAUSE | NEXT
			bindings = <&kp LEFT &lt 4 SPACE &kp RIGHT>;
			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
		};
		three {
			//PREV | PLAY/PAUSE | NEXT
			bindings = <&kp C_MUTE &lt 4 F13 &kp C_PP>;
		};
		shift {
			//PREV | PLAY/PAUSE | NEXT
			bindings = <&bt BT_CLR &trans &rgb_ug RGB_TOG>;
			sensor-bindings = <&def_lshft>;
		};
	};
};
